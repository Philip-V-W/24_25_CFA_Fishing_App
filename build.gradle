plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'  // Using a stable version
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'cfa.fishing'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Core dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'      // For JPA and Hibernate
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'    // For Thymeleaf templating
	implementation 'org.springframework.boot:spring-boot-starter-web'          // For building web applications
	implementation 'org.springframework.boot:spring-boot-starter-webflux'      // For reactive web applications
	implementation 'org.springframework.boot:spring-boot-starter-security'     // For Spring Security
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE' // For Spring Security integration with Thymeleaf

	// Additional necessary dependencies
	implementation 'org.springframework.boot:spring-boot-starter-validation'  // For input validation
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'                        // For JWT authentication
	implementation 'org.springframework.boot:spring-boot-starter-mail'       // For email notifications
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0' // For API documentation

	// Stripe dependency
	implementation 'com.stripe:stripe-java:24.0.0' // For payment processing

	// Utility dependencies
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Runtime dependencies
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}