spring:
  application:
    name: 24_25_CFA_Fishing_App

  datasource:
    url: jdbc:mariadb://db:3306/fishingstore
    username: fishinguser
    password: fishing2024
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop  # Changed from update to create-drop for development
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        format_sql: true
    show-sql: true
    defer-datasource-initialization: true  # Allows data.sql to run after Hibernate initialization

  sql:
    init:
      mode: always  # Enables SQL initialization

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  security:
    jwt:
      secret: ${JWT_SECRET:default-secret-key-which-should-be-replaced-in-production}
      expiration: 86400000  # 24 hours in milliseconds

  # Hot reload
  devtools:
    livereload:
      enabled: true
      port: 35729
    restart:
      enabled: true
      poll-interval: 1s
      quiet-period: 400ms
      additional-paths:
        - src/main/java
        - src/main/resources/templates
        - src/main/resources/static
    remote:
      secret: ${SPRING_DEVTOOLS_SECRET:secret2024}
      restart:
        enabled: true

  # thymeleaf
#  thymeleaf:
#    cache: false
#    prefix: file:src/main/resources/templates/
#    mode: HTML

#  web:
#    resources:
#      chain:
#        strategy:
#          content:
#            enabled: true
#            paths: /**
#      static-locations: classpath:/static/

mvc:
  pathmatch:
    matching-strategy: path-pattern-parser
  cors:
    allowed-origins: http://localhost:3000  # Next.js default port
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# Custom application properties
app:
  upload:
    dir: ${user.home}/fishing-store/uploads
  cors:
    allowed-origins: http://localhost:3000,http://localhost:8080

# Stripe API keys
stripe:
  secret-key: ${STRIPE_SECRET_KEY}

# Logging
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    cfa.fishing.fishing_store_app: DEBUG