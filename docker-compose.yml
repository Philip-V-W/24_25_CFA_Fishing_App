# Spring Boot orchestration
volumes:
  fishingdb:

networks:
  fishingnetwork:

services:
  # Spring Boot application container
  fishingapp:
    build:
      context: ./
    container_name: fishing-store-app
    ports:
      - "8080:8080"
      - "35729:35729"
    volumes:
      - ./:/app
      - ./gradle-cache:/root/.gradle
      - ./src:/app/src
    depends_on:
      - db
    networks:
      - fishingnetwork
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://db:3306/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      SPRING_DEVTOOLS_REMOTE_SECRET: ${SPRING_DEVTOOLS_SECRET}
      SPRING_DEVTOOLS_LIVERELOAD_ENABLED: "true"
      SPRING_DEVTOOLS_RESTART_ENABLED: "true"
      SPRING_THYMELEAF_CACHE: "false"
    tty: true

  # MariaDB container
  db:
    image: mariadb:latest
    container_name: fishingdb
    ports:
      - "3310:3306"
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - fishingdb:/var/lib/mysql
    networks:
      - fishingnetwork